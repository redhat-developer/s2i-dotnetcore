FROM __RUNTIME_BASE_IMAGE__

EXPOSE 8080

ENV DOTNET_CORE_VERSION=2.0

# Directory with the sources is set as the working directory. This should
# be a folder outside $HOME as this might cause issues when compiling sources.
# See https://github.com/redhat-developer/s2i-dotnetcore/issues/28
WORKDIR __DOTNET_PUBLISH_PATH__

# Default to UTF-8 file.encoding
ENV LANG=C.UTF-8 \
    HOME=__DOTNET_PUBLISH_PATH__ \
    PATH=/opt/app-root/src/.local/bin:/opt/app-root/src/bin:/opt/app-root/bin:/opt/app-root/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:__DOTNET_PUBLISH_PATH__ \
    STI_SCRIPTS_PATH=/usr/libexec/s2i \
    DOTNET_PUBLISH_PATH=__DOTNET_PUBLISH_PATH__ \
    DOTNET_RUN_SCRIPT=__DOTNET_PUBLISH_PATH__/s2i_run

LABEL io.k8s.description="Platform for building and running .NET Core 2.0 applications" \
      io.k8s.display-name=".NET Core 2.0" \
      io.openshift.s2i.scripts-url=image:///usr/libexec/s2i \
      io.openshift.tags="runtime,.net,dotnet,dotnetcore,rh-dotnet20" \
      io.openshift.expose-services="8080:http" \
      io.s2i.scripts-url=image:///usr/libexec/s2i

# Labels consumed by Red Hat build service
LABEL name="dotnet/dotnet-20-rhel7" \
      com.redhat.component="rh-dotnet20-docker" \
      version="2.0" \
      release="1" \
      architecture="x86_64"

COPY __BINARY_TAR__ __BINARY_TAR__
RUN tar xvf __BINARY_TAR__

COPY ./root/usr/bin /usr/bin

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH.
COPY ./s2i/bin/ /usr/libexec/s2i

# Each language image can have 'contrib' a directory with extra files needed to
# run and build the applications.
#COPY ./contrib/ /opt/app-root

# TODO: install rh-dotnet20
RUN yum install --disablerepo=\* --enablerepo=rhel-7-server-rpms -y yum-utils && \
    yum clean all && \
    mkdir -p __DOTNET_PUBLISH_PATH__ && \
    useradd -u 1001 -r -g 0 -d __DOTNET_PUBLISH_PATH__ -s /sbin/nologin \
      -c "Default Application User" default && \
    chown -R 1001:0 __DOTNET_PUBLISH_PATH__

# TODO: remove upstream sdk
# install upstream 2.0 sdk
RUN yum install --disablerepo=\* --enablerepo=rhel-7-server-rpms -y libunwind libicu && \
	yum clean all && \
    curl https://download.microsoft.com/download/0/6/5/0656B047-5F2F-4281-A851-F30776F8616D/dotnet-dev-linux-x64.2.0.0-preview1-005977.tar.gz -o /tmp/dotnet-sdk.tar.gz && \
    mkdir -p /opt/dotnet && \
    tar xf /tmp/dotnet-sdk.tar.gz -C /opt/dotnet && \
    ln -s /opt/dotnet/dotnet /usr/bin/dotnet; \
	rm /tmp/dotnet-sdk.tar.gz; \
	rm -rf /opt/dotnet/sdk

# Switch back to root for changing dir ownership/permissions
USER 0

# In order to drop the root user, we have to make some directories world
# writable as OpenShift default security model is to run the container under
# random UID.
RUN chown -R 1001:0 __DOTNET_PUBLISH_PATH__ && chmod -R og+rwx __DOTNET_PUBLISH_PATH__

# Run container by default as user with id 1001 (default)
USER 1001

# By default, ASP.NET Core runs on port 5000. We configure it to match
# the container port.
# Don't download/extract docs for nuget packages
# Don't initially populate the package cache
ENV ASPNETCORE_URLS=http://*:8080 \
	NUGET_XMLDOC_MODE=skip \
	DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1

ENTRYPOINT ["container-entrypoint"]

# Set the default CMD to print the usage of the language image.
CMD /usr/libexec/s2i/usage
