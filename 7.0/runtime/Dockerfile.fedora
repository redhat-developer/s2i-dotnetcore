FROM registry.fedoraproject.org/fedora
# This image provides a .NET 7.0 environment you can use to run your .NET
# applications.

EXPOSE 8080

ENV HOME=/opt/app-root \
    PATH=/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    DOTNET_APP_PATH=/opt/app-root/app \
    DOTNET_DATA_PATH=/opt/app-root/data \
    DOTNET_DEFAULT_CMD=default-cmd.sh \
    DOTNET_CORE_VERSION=7.0 \
    DOTNET_FRAMEWORK=net7.0 \
# Microsoft's images set this to enable detecting when an app is running in a container.
    DOTNET_RUNNING_IN_CONTAINER=true \
    DOTNET_SSL_CERT_DIR=/opt/app-root/ssl_dir

LABEL io.k8s.description="Platform for running .NET 7 applications" \
      io.k8s.display-name=".NET 7" \
      io.openshift.tags="runtime,.net,dotnet,dotnetcore,dotnet70-runtime" \
      io.openshift.expose-services="8080:http" \
      io.openshift.s2i.scripts-url=image:///usr/libexec/s2i \
      io.s2i.scripts-url=image:///usr/libexec/s2i


# Labels consumed by Red Hat build service
LABEL name="fedora/dotnet-70-runtime" \
      com.redhat.component="dotnet-70-runtime-container" \
      version="7.0" \
      release="1" \
      architecture="x86_64"

# Don't download/extract docs for nuget packages
ENV NUGET_XMLDOC_MODE=skip

## By default, ASP.NET Core runs on port 5000. We configure it to match
## the container port.
ENV ASPNETCORE_URLS=http://*:8080

# Each language image can have 'contrib' a directory with extra files needed to
# run and build the applications.
COPY ./contrib/ /opt/app-root

COPY ./root/usr/bin /usr/bin

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH.
COPY ./s2i/bin/ /usr/libexec/s2i

# Install packages:
# - aspnetcore-runtime-*: provides the .NET runtime and ASP.NET Core shared framework.
# - nss_wrapper: used by the 'generate_container_user' script.
# - findutils: provides 'find' which is used by the 'assemble' script.
# TODO: Use proper packages
# RUN INSTALL_PKGS="aspnetcore-runtime-7.0 nss_wrapper findutils" && \
#     yum install -y --setopt=tsflags=nodocs --setopt=install_weak_deps=False $INSTALL_PKGS && \
#     rpm -V $INSTALL_PKGS && \
#     yum clean all -y && \
# # yum cache files may still exist (and quite large in size)
#     rm -rf /var/cache/yum/*
RUN dnf install -y nss_wrapper tar gzip unzip findutils libicu && \
    curl https://download.visualstudio.microsoft.com/download/pr/bf594dbb-5ec8-486b-8395-95058e719e1c/42e8bc351654ed4c3ccaed58ea9180a1/dotnet-sdk-7.0.100-rc.1.22431.12-linux-x64.tar.gz -o /tmp/dotnet.tar.gz && \
    mkdir /opt/dotnet && \
    tar -xf /tmp/dotnet.tar.gz -C /opt/dotnet && \
    ln -s /opt/dotnet/dotnet /usr/bin/dotnet
ENV DOTNET_ROOT=/opt/dotnet

# Add default user
RUN mkdir -p ${DOTNET_APP_PATH} ${DOTNET_DATA_PATH} && \
    useradd -u 1001 -r -g 0 -d ${HOME} -s /sbin/nologin \
      -c "Default Application User" default

WORKDIR ${DOTNET_APP_PATH}
COPY default-cmd.sh ${DOTNET_DEFAULT_CMD}
CMD "./${DOTNET_DEFAULT_CMD}"

# In order to drop the root user, we have to make some directories world
# writable as OpenShift default security model is to run the container under
# random UID.
RUN chown -R 1001:0 /opt/app-root && fix-permissions /opt/app-root

ENTRYPOINT [ "container-entrypoint" ]

# Run container by default as user with id 1001 (default)
USER 1001
