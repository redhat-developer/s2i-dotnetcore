FROM rhel7
# This image provides a .NET Core 1.0 environment you can use to run your .NET
# applications.

EXPOSE 8080
EXPOSE 8081

ENV DOTNET_CORE_VERSION=1.0
# Default to UTF-8 file.encoding
ENV LANG=C.UTF-8 \
    HOME=/opt/app-root/src \
    PATH=/opt/app-root/src/.local/bin:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    STI_SCRIPTS_PATH=/usr/libexec/s2i

LABEL io.k8s.description="Platform for building and running .NET Core 1.0 applications" \
      io.k8s.display-name=".NET Core 1.0" \
      io.openshift.s2i.scripts-url=image:///usr/libexec/s2i \
      io.openshift.tags="builder,.net,dotnet,dotnetcore,rh-dotnetcore10" \
      io.openshift.expose-services="8080:http,8081:https" \
      io.s2i.scripts-url=image:///usr/libexec/s2i

# Labels consumed by Red Hat build service
LABEL name="dotnet/dotnetcore-10-rhel7" \
      com.redhat.component="rh-dotnetcore10-docker" \
      version="1.0" \
      release="12" \
      architecture="x86_64"

COPY ./root/usr/bin /usr/bin

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH.
COPY ./s2i/bin/ /usr/libexec/s2i

# Each language image can have 'contrib' a directory with extra files needed to
# run and build the applications.
COPY ./contrib/ /opt/app-root

RUN yum install -y yum-utils && \
    yum-config-manager --enable rhel-7-server-dotnet-rpms && \
    yum-config-manager --enable rhel-7-server-rpms && \
    yum-config-manager --enable rhel-7-server-ose-3.0-rpms && \
    yum install -y --setopt=tsflags=nodocs rh-dotnetcore10 nss_wrapper tar && \
    yum clean all && \
    mkdir -p /opt/app-root/src && \
    useradd -u 1001 -r -g 0 -d /opt/app-root/src -s /sbin/nologin \
      -c "Default Application User" default && \
    chown -R 1001:0 /opt/app-root

# Switch to default app-user for cache population
USER 1001

# Don't download/extract docs for nuget packages
ENV NUGET_XMLDOC_MODE=skip

# - Initialize the .Net cache via 'scl enable rh-dotnetcore10 -- dotnet new'
#   Move to the proper command to do this once https://github.com/dotnet/cli/issues/3692 is fixed.
# - Removal of /tmp/NuGetScratch is needed due to:
#   https://github.com/NuGet/Home/issues/2793
# - Work around corefx issue 12758 where some C# source files are included
#   in nuget packages. See:
#   https://github.com/dotnet/corefx/issues/12758
RUN cd /opt/app-root/src && mkdir cache-warmup && \
    cd cache-warmup && \
    scl enable rh-dotnetcore10 -- dotnet new && \
    cd .. && \
    rm -rf cache-warmup && \
    rm -rf /tmp/NuGetScratch && \
    find .nuget -name '*.cs' -exec rm '{}' \;

# Switch back to root for changing dir ownership/permissions
USER 0

# In order to drop the root user, we have to make some directories world
# writable as OpenShift default security model is to run the container under
# random UID.
RUN chown -R 1001:0 /opt/app-root && chmod -R og+rwx /opt/app-root

# Get prefix path and path to scripts rather than hard-code them in scripts
ENV CONTAINER_SCRIPTS_PATH=/opt/app-root \
    ENABLED_COLLECTIONS=rh-dotnetcore10

# When bash is started non-interactively, to run a shell script, for example it
# looks for this variable and source the content of this file. This will enable
# the SCL for all scripts without need to do 'scl enable'.
ENV BASH_ENV=${CONTAINER_SCRIPTS_PATH}/etc/scl_enable \
    ENV=${CONTAINER_SCRIPTS_PATH}/etc/scl_enable \
    PROMPT_COMMAND=". ${CONTAINER_SCRIPTS_PATH}/etc/scl_enable"

# Directory with the sources is set as the working directory. Set it to ${HOME}
WORKDIR /opt/app-root/src

# Run container by default as user with id 1001 (default)
USER 1001

ENTRYPOINT ["container-entrypoint"]

# Set the default CMD to print the usage of the language image.
CMD /usr/libexec/s2i/usage
