FROM ubi9/dotnet-100-runtime

# ASPNET_VERSION must be set to the full framework versions, unless IS_CI is set to true.
ARG ASPNET_VERSION=10.0
ARG IS_CI
ARG DOTNET_TARBALL

# Like Microsoft images, provide the ASP.NET shared framework version.
ENV ASPNET_VERSION=$ASPNET_VERSION

LABEL \
      # Labels consumed by Red Hat build pipeline, container catalog and OpenShift
      com.redhat.component="dotnet-container" \
      name="ubi9/dotnet-100-aspnet" \
      summary="ASP.NET Core 10 Runtime" \
      io.k8s.display-name="ASP.NET Core 10 Runtime" \
      io.k8s.description="Base image for running ASP.NET Core 10.0 applications" \
      description="Base image for running ASP.NET Core 10.0 applications" \
      io.openshift.tags="runtime,dotnet,aspnet,aspnetcore,dotnet-100,dotnet-100-aspnet" \
      aspnet_version="$ASPNET_VERSION" \
      # UBI EULA
      com.redhat.license_terms="https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI"

USER 0

# Install packages:
# - aspnetcore-runtime-*: provides the ASP.NET Core shared framework.
RUN [ -n "${DOTNET_TARBALL}" ] || ( \
    INSTALL_PKGS="aspnetcore-runtime-10.0" && \
    microdnf install -y --setopt=tsflags=nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \
 # yum cache files may still exist (and quite large in size)
    rm -rf /var/cache/yum/* )

# Check the versions of the environment variables match the installed versions.
RUN [ "$IS_CI" == "true" ] || ( \
        printf "Checking framework versions ${DOTNET_VERSION} and ${ASPNET_VERSION} against:\n$(dotnet --list-runtimes)" && \
        dotnet --list-runtimes | grep "Microsoft.NETCore.App ${DOTNET_VERSION} " && \
        dotnet --list-runtimes | grep "Microsoft.AspNetCore.App ${ASPNET_VERSION} " )

# Ensure we didn't add anything to HOME that is owned by root.
RUN chown -R $APP_UID:0 /opt/app-root && fix-permissions /opt/app-root

# Run container rootless.
USER $APP_UID
